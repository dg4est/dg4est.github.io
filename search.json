[
  
  
    {
      "title": "Home Page",
      "url": "/",
      "content": "                    Built for precision. Engineered for parallelism.                            dg4est is a software framework designed to support the development of hp-finite element methods for massively parallel scalable solvers using dynamically adaptive meshes. The code has hooks for WAKE3D, a multi-solver, multi-mesh overset framework.        Learn More                                Why Dg4est?                Designed to scale. Built with adaptability in mind. Dg4est powers high-fidelity numerical simulations with advanced hp-adaptive finite element methods.        Explore Sections                  Core Sections                                          Authors          Meet the contributors behind the research and tools.                                                Getting Started          New to Dg4est? This is your starting point for setup and usage.                                                Documentation          Read the technical documentation and implementation details.                                                Publications          Browse academic papers, posters, and reference materials.                                                                              Category            Project Name                                                                            Category            Project Name                                                                            Category            Project Name                                                                            Category            Project Name                                                                            Category            Project Name                                                                            Category            Project Name                                          Free Download on GitHub    Download Now  "
    },
  
    {
      "title": "Search Results",
      "url": "/search.html",
      "content": "  Search Results"
    },
  
    {
      "title": null,
      "url": "/search.json",
      "content": "[  {% assign pages = site.pages | concat: site.docs %}  {% for page in pages %}    {      \"title\": {{ page.title | jsonify }},      \"url\": {{ page.url | relative_url | jsonify }},      \"content\": {{ page.content | strip_html | strip_newlines | jsonify }}    }{% unless forloop.last %},{% endunless %}  {% endfor %}]"
    },
  
    {
      "title": "Authors",
      "url": "/docs/authors/",
      "content": "Project ContributorsThis is the authors page for the DG4EST project."
    },
  
    {
      "title": "documentation",
      "url": "/docs/documentation/",
      "content": "üåü Fancy Markdown ShowcaseWelcome to this Markdown Feature Demo! Below you‚Äôll find a full suite of markdown examples wrapped in a beautiful theme.‚ú® HeadingsH3 ExampleH4 ExampleH5 Exampleüî§ Text Formatting  Italic text  Bold text  Strikethrough  Inline code exampleüìú Blockquote  ‚ÄúLorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus luctus urna sed urna ultricies ac tempor dui sagittis.‚Äùüî¢ Lists‚úÖ Unordered List  Markdown  Is  Pretty          And supports nesting      Neat!      üî¢ Ordered List  First item  Second item  Third itemüßæ Table            Syntax      Description                  Header      Title              Paragraph      Text      üîß Code Blocksdef hello_world():    print(\"Hello, world!\")end of test"
    },
  
    {
      "title": "example-cases",
      "url": "/docs/example-cases/",
      "content": "SHOW THE 3D Viewers here?üî§ Text Formatting  Italic text  Bold text  Strikethrough  Inline code exampleüìú Blockquote  ‚ÄúLorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus luctus urna sed urna ultricies ac tempor dui sagittis.‚Äù"
    },
  
    {
      "title": "flow-visualization",
      "url": "/docs/flow-visualization/",
      "content": "Embedded STL ViewerFluid Simulation (59 STL Frames)"
    },
  
    {
      "title": "Getting Started",
      "url": "/docs/getting-started/",
      "content": "Dg4estDg4est is a software framework designed to support the development of hp-finite element methods for massively parallel scalable solvers using dynamically adaptive meshes.The code has hooks for WAKE3D, a multi-solver, multi-mesh overset framework.This code contains a discontinuous Galerkin compressible Navier-Stokes solver, CartDG, which is formulated using nodal Lagrange basis functions via a weak formulation and split-form summation-by-parts.Additionally, modal Legendre basis functions are available within the weak formulation.NSF CRII Timeline MilestonesYear 1  Q1: May 1, 2024 ‚Äì July 31, 2024  Q2: August 1, 2024 ‚Äì October 31, 2024  Q3: November 1, 2024 ‚Äì January 31, 2025  Q4: February 1, 2025 ‚Äì April 30, 2025Year 2  Q5: May 1, 2025 ‚Äì July 31, 2025  Q6: August 1, 2025 ‚Äì October 31, 2025  Q7: November 1, 2025 ‚Äì January 31, 2026  Q8: February 1, 2026 ‚Äì April 30, 20261. Obtaining the Codegit clone https://github.com/dg4est/dg4est.git2. CompilationTo compile dg4est and third-party libraries (e.g., p4est, metis, googletest):./makescript.sh &lt;options&gt;Usage:./makescript.sh {OPTIONS}... {COMPILER OPTIONS}... {DG4EST OPTIONS}... {3PL OPTIONS}Available Options            Option      Shortcut      Description                  --3pl      -3pl      Build metis, p4est, and googletest              --acoustics      -acoustics      Build FW-H Acoustics library              --dg4est      -dg4est      Build the dg4est AMR library              --help      -h      Display help message              --clean      -c      Remove local build directories              --distclean      -dc      Remove builds and install directories              --release      -opt      Compile in optimized mode              --debug      -deb      Compile in debug mode              --testsON      -ton      Enable unit tests (Google Test)      Compiler Options            Option      Shortcut      Description                  CC=&lt;arg&gt;      cc=&lt;arg&gt;      Set C compiler              CXX=&lt;arg&gt;      cxx=&lt;arg&gt;      Set C++ compiler              FC=&lt;arg&gt;      fc=&lt;arg&gt;      Set Fortran compiler      Third-Party Library Options            Option      Shortcut      Description                  --ALL3P      -all3p      Compile all 3rd parties              --P4EST      -p4est      Compile p4est              --METIS      -metis      Compile metis              --GTEST      -gtest      Compile Google Test      3. Common Build Options  NWSC (Wyoming HPC):    ./makescript.sh -nwsc# Sets: CC=mpicc CXX=mpicxx FC=mpif90        Intel MPI:    ./makescript.sh -impi# Sets: CC=mpiicc CXX=mpiicpc FC=mpiifort      4. DependenciesRequired Software  cmake (v3.1+)  libtool: apt install libtool  automake: apt install automake  zlib: apt install zlib1g zlibc  Optional: MPI-3 one-sided functionsDocumentation Tools  doxygen: apt install doxygen  graphviz: apt install graphviz  latex: apt install texlive-full texmaker5. License  MIT License (MIT)¬© 2023 Andrew C. Kirby, Dimitri J. MavriplisPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ‚ÄúSoftware‚Äù), to deal in the Software without restriction‚Ä¶"
    },
  
    {
      "title": "performance",
      "url": "/docs/performance/",
      "content": "Welcome to this Markdown Feature Demo! Below you‚Äôll find a full suite of markdown examples wrapped in a beautiful theme.‚ú® HeadingsH3 ExampleH4 ExampleH5 Example"
    },
  
    {
      "title": "publications",
      "url": "/docs/publications/",
      "content": "Check these sites for the existing publicationsthis could also be a page to display excerpts or render the pdf in a reader"
    }
  
]
